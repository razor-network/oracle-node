// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	ecdsa "crypto/ecdsa"

	mock "github.com/stretchr/testify/mock"
)

// CryptoInterface is an autogenerated mock type for the CryptoInterface type
type CryptoInterface struct {
	mock.Mock
}

// HexToECDSA provides a mock function with given fields: hexKey
func (_m *CryptoInterface) HexToECDSA(hexKey string) (*ecdsa.PrivateKey, error) {
	ret := _m.Called(hexKey)

	var r0 *ecdsa.PrivateKey
	if rf, ok := ret.Get(0).(func(string) *ecdsa.PrivateKey); ok {
		r0 = rf(hexKey)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ecdsa.PrivateKey)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(hexKey)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

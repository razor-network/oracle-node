# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
jobs:
  test:
    docker:
      - image: cimg/go:1.17.6
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - run:
          name: "Building docker image"
          command: |
            docker build --file Dockerfile.test -t razor-test .
      - run:
          name: "go-fmt"
          command: |
            docker run --rm -v $(pwd):/test --name go  razor-test gofmt
      - run:
          name: "go-lint"
          command: |
            docker run --rm -v $(pwd):/test --name go  razor-test golangci-lint run -v --timeout 5m
      - run:
          name: "Executing test cases"
          command: |
            docker run --rm -v $(pwd):/test --name go  razor-test go-acc ./... --ignore razor/accounts/mocks --ignore razor/cmd/mocks --ignore razor/utils/mocks --ignore pkg --ignore razor/path/mocks --output /test/coverage.txt
      - run:
          name: "Executing benchmarks"
          command: |
            docker run --rm -v $(pwd):/test --name go  razor-test go test ./... -bench=. -run=^#
      - run:
          name: "Publish Coverage to Coveralls.io"
          command: |
            docker run --rm -v $(pwd):/test --name go -e COVERALLS_TOKEN=$COVERALLS_TOKEN razor-test goveralls -coverprofile=/test/coverage.txt -service semaphore -repotoken $COVERALLS_TOKEN
      - persist_to_workspace:
          root: .
          paths:
            - .
  push-docker-build:
    docker:
      - image: cimg/go:1.17.6
        environment:
          IMAGE_NAME: "razornetwork/razor-go"

    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - run:
          name: Install Docker Buildx
          command: |
            mkdir -vp ~/.docker/cli-plugins/
            curl --silent -L "https://github.com/docker/buildx/releases/download/v0.5.1/buildx-v0.5.1.linux-amd64" > ~/.docker/cli-plugins/docker-buildx
            chmod a+x ~/.docker/cli-plugins/docker-buildx
            docker buildx version
            sudo apt-get update && sudo apt-get install -y binfmt-support qemu-user-static
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            docker run --privileged --rm tonistiigi/binfmt --install arm64
            docker context create buildcontext
            docker buildx create buildcontext --use
      - run:
          name: "Build docker image"
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
            docker buildx build --push --platform linux/arm64/v8,linux/amd64 --tag $IMAGE_NAME:$CIRCLE_TAG .
workflows:
  tests:
    jobs:
      - test
  publish:
    jobs:
      - push-docker-build:
          context: Build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

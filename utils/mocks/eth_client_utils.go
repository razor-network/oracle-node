// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	ethclient "github.com/ethereum/go-ethereum/ethclient"
	mock "github.com/stretchr/testify/mock"
)

// EthClientUtils is an autogenerated mock type for the EthClientUtils type
type EthClientUtils struct {
	mock.Mock
}

// Dial provides a mock function with given fields: rawurl
func (_m *EthClientUtils) Dial(rawurl string) (*ethclient.Client, error) {
	ret := _m.Called(rawurl)

	var r0 *ethclient.Client
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*ethclient.Client, error)); ok {
		return rf(rawurl)
	}
	if rf, ok := ret.Get(0).(func(string) *ethclient.Client); ok {
		r0 = rf(rawurl)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ethclient.Client)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(rawurl)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewEthClientUtils creates a new instance of EthClientUtils. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEthClientUtils(t interface {
	mock.TestingT
	Cleanup(func())
}) *EthClientUtils {
	mock := &EthClientUtils{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
